// Code generated by mockery. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// ReplaceGenericSelf is an autogenerated mock type for the ReplaceGenericSelf type
type ReplaceGenericSelf struct {
	mock.Mock
}

type ReplaceGenericSelf_Expecter struct {
	mock *mock.Mock
}

func (_m *ReplaceGenericSelf) EXPECT() *ReplaceGenericSelf_Expecter {
	return &ReplaceGenericSelf_Expecter{mock: &_m.Mock}
}

// A provides a mock function with given fields:
func (_m *ReplaceGenericSelf) A() *ReplaceGenericSelf {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for A")
	}

	var r0 *ReplaceGenericSelf
	if rf, ok := ret.Get(0).(func() *ReplaceGenericSelf); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(*ReplaceGenericSelf)
	}

	return r0
}

// ReplaceGenericSelf_A_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'A'
type ReplaceGenericSelf_A_Call struct {
	*mock.Call
}

// A is a helper method to define mock.On call
func (_e *ReplaceGenericSelf_Expecter) A() *ReplaceGenericSelf_A_Call {
	return &ReplaceGenericSelf_A_Call{Call: _e.mock.On("A")}
}

func (_c *ReplaceGenericSelf_A_Call) Run(run func()) *ReplaceGenericSelf_A_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ReplaceGenericSelf_A_Call) Return(_a0 *ReplaceGenericSelf) *ReplaceGenericSelf_A_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ReplaceGenericSelf_A_Call) RunAndReturn(run func() *ReplaceGenericSelf) *ReplaceGenericSelf_A_Call {
	_c.Call.Return(run)
	return _c
}

// NewReplaceGenericSelf creates a new instance of ReplaceGenericSelf. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewReplaceGenericSelf(t interface {
	mock.TestingT
	Cleanup(func())
}) *ReplaceGenericSelf {
	mock := &ReplaceGenericSelf{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
