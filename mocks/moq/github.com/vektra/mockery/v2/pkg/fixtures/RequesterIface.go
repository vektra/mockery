// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery

package test

import (
	"io"
	"sync"
)

// RequesterIfaceMock is a mock implementation of RequesterIface.
//
//	func TestSomethingThatUsesRequesterIface(t *testing.T) {
//
//		// make and configure a mocked RequesterIface
//		mockedRequesterIface := &RequesterIfaceMock{
//			GetFunc: func() io.Reader {
//				panic("mock out the Get method")
//			},
//		}
//
//		// use mockedRequesterIface in code that requires RequesterIface
//		// and then make assertions.
//
//	}
type RequesterIfaceMock struct {
	// GetFunc mocks the Get method.
	GetFunc func() io.Reader

	// calls tracks calls to the methods.
	calls struct {
		// Get holds details about calls to the Get method.
		Get []struct {
		}
	}
	lockGet sync.RWMutex
}

// Get calls GetFunc.
func (mock *RequesterIfaceMock) Get() io.Reader {
	if mock.GetFunc == nil {
		panic("RequesterIfaceMock.GetFunc: method is nil but RequesterIface.Get was just called")
	}
	callInfo := struct {
	}{}
	mock.lockGet.Lock()
	mock.calls.Get = append(mock.calls.Get, callInfo)
	mock.lockGet.Unlock()
	return mock.GetFunc()
}

// GetCalls gets all the calls that were made to Get.
// Check the length with:
//
//	len(mockedRequesterIface.GetCalls())
func (mock *RequesterIfaceMock) GetCalls() []struct {
} {
	var calls []struct {
	}
	mock.lockGet.RLock()
	calls = mock.calls.Get
	mock.lockGet.RUnlock()
	return calls
}

// ResetGetCalls reset all the calls that were made to Get.
func (mock *RequesterIfaceMock) ResetGetCalls() {
	mock.lockGet.Lock()
	mock.calls.Get = nil
	mock.lockGet.Unlock()
}

// ResetCalls reset all the calls that were made to all mocked methods.
func (mock *RequesterIfaceMock) ResetCalls() {
	mock.lockGet.Lock()
	mock.calls.Get = nil
	mock.lockGet.Unlock()
}
